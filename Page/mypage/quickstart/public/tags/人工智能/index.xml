<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>人工智能 - 标签 - mengcfunk&#39;s website</title>
        <link>http://www.mengcfunk.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</link>
        <description>人工智能 - 标签 - mengcfunk&#39;s website</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>1031205858@qq.com (mengxiangwei)</managingEditor>
            <webMaster>1031205858@qq.com (mengxiangwei)</webMaster><lastBuildDate>Thu, 05 Mar 2020 14:56:50 &#43;0800</lastBuildDate><atom:link href="http://www.mengcfunk.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/" rel="self" type="application/rss+xml" /><item>
    <title>N皇后问题</title>
    <link>http://www.mengcfunk.com/nqueen/</link>
    <pubDate>Thu, 05 Mar 2020 14:56:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.mengcfunk.com/nqueen/</guid>
    <description><![CDATA[n 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。
  N皇后问题棋盘   我们要做的就是把这种结果求出来,通过回朔法的方式把这个树建出来,在求解的过程中做剪枝,不用暴力破解这个答案,因为即使是8*8的所有解都是编译器难以接受的. 算法是我自己写的,没有优化.很久之前写的,更新博客的时候发现有这个就加进来了.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159  #include&lt;stdio.]]></description>
</item><item>
    <title>A*算法解决8数码问题</title>
    <link>http://www.mengcfunk.com/eightcode/</link>
    <pubDate>Wed, 04 Mar 2020 15:58:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.mengcfunk.com/eightcode/</guid>
    <description><![CDATA[在3×3的棋盘上，摆有八个棋子，每个棋子上标有1至8的某一数字。棋盘中留有一个空格，空格用0来表示。空格周围的棋子可以移到空格中。要求解的问题是：给出一种初始布局（初始状态）和目标布局，找到一种最少步骤的移动方法，实现从初始布局到目标布局的转变。
  8数码要解决的问题   基本的棋子移动,不应当看做是空格(也就是图中的0)向四个方向移动,而不是看成其他4个棋子向空格移动,这样会增加难度.
启发式搜索的关键在于对每步的动作进行评估和在close表中出现过,若出现过则回朔到上一步,对每次的步骤进行评估,按照评估的价值对open表进行排序(这里采用插入排序). 具体步骤如下:
 （ 1 ）把初始节点 S0 放入 Open 表中， f(S0)=g(S0)+h(S0);
（ 2 ）如果 Open 表为空，则问题无解，失败退出；
• （ 3 ）把 Open 表的第一个节点取出放入 Closed 表，并记该节点为 n ；
• （ 4 ）考察节点 n 是否为目标节点。若是，则找到了问题的解，成功退出；
• （ 5 ）若节点 n 不可扩展，则转到第 (2) 步；
• （ 6 ）扩展节点 n ，生成子节点 ni ( i =1,2, …… ) ，计算每一个子节点的估价值 f( ni ) ( i =1,2, …… ) ，并为每一个子节点设置指向父节点的指针，然后将这些子节点放入 Open 表中；]]></description>
</item><item>
    <title>回朔法解决8数码问题</title>
    <link>http://www.mengcfunk.com/eightcodelimit/</link>
    <pubDate>Wed, 04 Mar 2020 15:58:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://www.mengcfunk.com/eightcodelimit/</guid>
    <description><![CDATA[回朔法求8数码问题
在3×3的棋盘上，摆有八个棋子，每个棋子上标有1至8的某一数字。棋盘中留有一个空格，空格用0来表示。空格周围的棋子可以移到空格中。要求解的问题是：给出一种初始布局（初始状态）和目标布局，找到一种最少步骤的移动方法，实现从初始布局到目标布局的转变。
  8数码要解决的问题   基本的棋子移动,不应当看做是空格(也就是图中的0)向四个方向移动,而不是看成其他4个棋子向空格移动,这样会增加难度.
include&lt;stdio.]]></description>
</item></channel>
</rss>
